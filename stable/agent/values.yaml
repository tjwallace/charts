# Default values for bk-agent.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: buildkite/agent
  # Note that by default we use appVersion to get image tag version
  # tag:
  pullPolicy: IfNotPresent

# Buildkite Agent settings
agent:
  # Your Buildkite agent token, it must be set
  token: ""
  # Agent tags, which can be used to assign jobs
  tags: "role=agent"

# Enable mounting the hosts docker socket into the agent container
enableHostDocker: true

# Enable security context configuration
securityContext: {}
  # privileged: true

# Extra env vars to be passed
# If you do want to pass extra env vars to the agent, uncomment the following
# lines, adjust them as necessary.
extraEnv:
#  - name: test1
#    value: "test1"
#  - name: test2
#    value: "test2"

# Mount extra Secrets
# If you do want to mount extra Secrets via volume mounts to the agent container,
# uncomment the following lines, adjust them as necessary.
#
volumeMounts: {}
#  - name: my-secrets
#    value: "/chamber-of-secrets"
#
volumes: {}
#  - name: my-secrets
#    secret:
#      secretName: "some-k8s-secret"

# Your ssh private key if you want to access private git repository
privateSshKey: ""

# Your ssh private keys if you want to access several private git repositories
# name will be visible on the Secret to track which keys have been added
# key has to be encoded in base64
privateSshKeys:
#  - name: "id_rsa_jeff"
#    base64Key: "private_key_encoded"

# Docker registries credentials
registryCreds:
  # GCP credentials for GCR
  # base64 encoded GCP Service account json key file
  gcrServiceAccountKey: ""
  # base64 encoded private registry docker config.json file
  # for quay.io, docker hub, ecr and etc to mount over the container,
  # not to be used with imagePullSecrets
  dockerConfig: ""
  # base64 encoded private registry docker config.json file
  # to be used with imagePullSecrets
  dockerconfigjson: ""

# Add scriptes to /docker-entrypoint.d/ via a ConfigMap
entrypointd: {}
# 01-install-kubectl: |
#   #!/bin/bash
#   set -euo pipefail
#   apt-get update && apt-get install -y kubectl

serviceAccount:
  annotations: {}

 # Uncomment below to enable docker socket liveness probe
livenessProbe:
  # initialDelaySeconds: 15
  # timeoutSeconds: 1
  # exec:
  #   command:
  #   - docker
  #   - ps

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #  cpu: 500m
  #  memory: 1024Mi
  # requests:
  #  cpu: 100m
  #  memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

# RBAC manifests management
rbac:
  create: false
  role:
    ## Rules to create. It follows the role specification
    rules:
      - apiGroups:
          - ""
        resources:
          - namespaces
        verbs:
          - watch
          - list
      - apiGroups:
          - ""
        resources:
          - secrets
        verbs:
          - get
          - watch
          - list
      - apiGroups:
          - ""
          - extensions
          - apps
          - batch
        resources:
          - pods
          - replicasets
          - replicationcontrollers
          - statefulsets
          - deployments
          - daemonsets
          - jobs
          - cronjobs
        verbs:
          - get
          - delete
          - watch
          - list
          - update
      - apiGroups:
          - ""
        resources:
          - configmaps
          - secrets
        verbs:
          - get
          - create
          - update

podDisruptionBudget:
  enabled: false
  maxUnavailable: 1
  minAvailable: null

# Extra annotations for the pod
podAnnotations: {}

# Extra "sidecar" containers for the pod
podContainers: {}
# - name: container-name
#   image: container-image:tag
#   args: ["cmd"]
#   env:
#   - name: VAR_NAME
#     value: var_value

# Preconfigured Docker-in-Docker (DinD) container specification
dind:
  enabled: false
  image: docker:19.03-dind
  port: 2375
